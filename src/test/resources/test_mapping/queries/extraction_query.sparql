PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

# Delete any leftovers of previous schemata
#DROP GRAPH <http://example.org/LOVInferred>;

# Find all predicates used in the current dataset and their equivalents and generalizations
INSERT {
  ?predicate a rdf:Property;
    rdfs:domain ?pDomain;
    rdfs:range ?pRange.

  ?pDomain a <http://www.w3.org/2000/01/rdf-schema#Class>.
  ?pRange a <http://www.w3.org/2000/01/rdf-schema#Class>.
}
WHERE {
  {
    SERVICE ?service{
        {SELECT DISTINCT ?x ?pDomain ?pRange {
          ?s ?x ?o.
          OPTIONAL { ?s a ?pDomain}
          OPTIONAL { ?o a ?pRange}
        }}
        # x1
        ?x (rdfs:subPropertyOf|owl:equivalentProperty|^owl:equivalentProperty|owl:sameAs|^owl:sameAs)* ?predicate
    }
    FILTER(!isBlank(?predicate))
  }
};

# Find all classes used in the current dataset or implied through entailment
INSERT {
  ?y a rdfs:Class
}
WHERE {
  {
    SELECT DISTINCT ?y {
        SERVICE ?service {
            [] a ?y FILTER(!isBlank(?y))
        }
    }
  } UNION {
    {SELECT DISTINCT ?y {
      ?predicate a rdf:Property
      SERVICE ?service{
        ?predicate (rdfs:range|rdfs:domain) ?y FILTER(!isBlank(?y))
      }
    }}
  }
};

# Find all class equivalences implied through entailment
INSERT {
  ?concept a rdfs:Class
}
WHERE {
  {
    ?y a rdfs:Class
    SERVICE ?service{
        ?y (rdfs:subClassOf|owl:sameAs|^owl:sameAs|owl:equivalentClass|^owl:equivalentClass)+ ?concept
    }
    FILTER(!isBlank(?concept))
  }
};


# Find describing information of previously discovered classes and predicates
INSERT {
  ?s ?p ?o
}
WHERE {
  {
    {?s a rdf:Property} UNION {?s a rdfs:Class}
    SERVICE ?service{
        ?s ?p ?o
    }
  }
};

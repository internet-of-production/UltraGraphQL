PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX hgqls: <http://hypergraphql.org/schema/>

# Delete any leftovers of previous schemata
#DROP GRAPH <http://example.org/LOVInferred>;

# Find all predicates used in the current dataset and their equivalents and generalizations

INSERT {
  ?predicate a ?property;
    ?domain ?pDomain;
    ?range ?pRange.
  ?pDomain a ?class.
  ?pRange a ?class.
}
WHERE {
  {
    SERVICE ?service{
        {SELECT DISTINCT ?x ?pDomain ?pRange{
          ?x a ?property.
	  OPTIONAL{ ?x ?domains ?pDaomain.}
	  OPTIONAL{ ?x ?ranges ?pRanges.}
        }}
        ?x (?subPropertiesOf|?sameAses|^(?sameAses))* ?predicate.

    }
    FILTER(!isBlank(?predicate))
  }
};

INSERT {
  ?predicate a ?property;
    ?domain ?pDomain;
    ?range ?pRange.
  ?pDomain a ?class.
  ?pRange a ?class.
}
WHERE {
  {
    SERVICE ?service{
        {SELECT DISTINCT ?x ?pDomain ?pRange{
            {SELECT DISTINCT ?x ?pDomain ?ppRange ?pRangeLiteral {
              ?s ?x ?o.
              OPTIONAL { ?o a ?ppRange }
              OPTIONAL { ?s a ?pDomain}
              BIND(IF(isLiteral(?o),hgqls:Literal,"") AS ?pRangeLiteral)
          }}
          BIND(IF(?pRangeLiteral = "", ?ppRange, ?pRangeLiteral)AS ?pRange)
        }}
        ?x (?subPropertiesOf|?sameAses|^(?sameAses))* ?predicate.

    }
    FILTER(!isBlank(?predicate))
  }
};

INSERT {
  ?y a ?class
}
WHERE {
  {
    SELECT DISTINCT ?y {
        SERVICE ?service {
            ?y a ?class FILTER(!isBlank(?y))
        }
    }
  } 
};

# Find all classes used in the current dataset or implied through entailment
INSERT {
  ?y a ?class
}
WHERE {
  {
    SELECT DISTINCT ?y {
        SERVICE ?service {
            [] a ?y FILTER(!isBlank(?y))
        }
    }
  } UNION {
    {SELECT DISTINCT ?y {
      ?predicate a ?property
      SERVICE ?service{
        ?predicate (?ranges|?domains) ?y FILTER(!isBlank(?y))
      }
    }}
  }
};

# Find all class equivalences implied through entailment
INSERT {
  ?concept a ?class
}
WHERE {
  {
    ?y a ?classes
    SERVICE ?service{
        ?y (?subClassesOf|?sameAses|^(?sameAses))+ ?concept
    }
    FILTER(!isBlank(?concept))
  }
};


# Find describing information of previously discovered classes and predicates
INSERT {
  ?s ?p ?o
}
WHERE {
  {
    {?s a ?property} UNION {?s a ?class}
    SERVICE ?service{
        ?s ?p ?o
    }
  }
};
